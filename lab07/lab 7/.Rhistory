library(knitr)
obs <- seq(1:5)
income <- c(30,28,52,40,35)
edu <- c(12,13,18,16,17)
df <- data.frame(obs,income,edu)
names(df) <- c("Observation","Income ($*1000)","Education (Years)")
kable(df)
covariance <- cov(df$`Income ($*1000)`,df$`Education (Years)`,use="everything",method = c("pearson","kendall","spearman"))
correlation <- cor(df,use = "complete.obs",method = "pearson")
correlation
cor.test(df$`Income ($*1000)`,df$`Education (Years)`,method = "pearson")
cor(df,use = "complete.obs",method = "pearson")
cor.test(df$`Income ($*1000)`,df$`Education (Years)`,method = "pearson")
result <- cor.test(df$`Income ($*1000)`,df$`Education (Years)`,method = "pearson")
if(result$p.value<=0.05){
print("we reject the null hypothesis")
} else{
print("we cannot reject the null hypothesis")
}
cor(df,use = "complete.obs",method = "Spearman")
cor(df,use = "complete.obs",method = "spearman")
new_result <- cor.test(df$`Income ($*1000)`,df$`Education (Years)`,method = "spearman")
if(result$p.value<=0.05){
print("we reject the null hypothesis")
} else{
print("we cannot reject the null hypothesis")
}
free <- 36-2
qt(0.95,df = free)
crit_t <- qt(0.95,df = free)
X <- c(2,8,9,7)
Y <- c(6,6,10,4)
Obs <- seq(1:4)
X <- c(2,8,9,7)
Y <- c(6,6,10,4)
df <- data.frame(Obs,X,Y)
cor(df,use="complete.obs",method="pearson")
year <- 1984:1994
income <- c(35165,35778,37027,37256,37512,37997,37343,36054,35593,35241,35486)
races <- c(399,469,429,450,474,598,364,430,433,410,317)
df <- data.frame(year,income,races)
names(df) <- c("Year","Median income","Number of races won by leading jockey")
cor.test(df$`Median income`,df$`Number of races won by leading jockey`,method = "pearson")
result <- cor.test(df$`Median income`,df$`Number of races won by leading jockey`,method = "pearson")
if (result$p.value<= 0.05){
print("we reject the null hypothesis")
}else{
print("we cannot reject the null hypothesis")
}
obs <- 1:6
x <- c(1,2,5,6,11,12)
y <- c(8,4,12,3,10,7)
df <- data.frame(obs,x,y)
names(df) <- c("Observation","Rank of x","Rank of y")
cor(df,use = 'complete.obs',method = "spearman")
result <- cor.test(df$`Rank of x`,df$`Rank of y`,method = "spearman")
if (result<=0.1){
print("we reject the null hypothesis")
} else{
print("we cannot reject the null hypothesis")
}
result <- cor.test(df$`Rank of x`,df$`Rank of y`,method = "spearman")
if (result$p.value<=0.1){
print("we reject the null hypothesis")
} else{
print("we cannot reject the null hypothesis")
}
obs <- 1:6
x <- c(3.2,2.4,1.6,8.3,7.2,5.1)
y <- c(6.2,7.3,8.1,2.6,6.3,4.3)
df <- data.frame(obs,x,y)
names(df) <- c("Observation","x","y")
cor(df,use='complete.obs',method="pearson")
result <- cor.test(df$x,df$y,alternative='less',method="pearson")
result <- cor.test(df$x,df$y,alternative='less',method="pearson")
if(result$p.value<=0.05){
print("we reject the null hypothesis")
} else{
print("we cannot reject the null hypothesis")
}
read.csv("http://assessments.milwaukee.gov/SalesData/2012_RVS_Dist1.html")
read.csv("http://assessments.milwaukee.gov/SalesData/2012_RVS_Dist1.htm")
library(XML)
library(XML)
library(RCurl)
library(rlist)
read.csv("milwaukee.csv")
DF <- read.csv("milwaukee.csv")
df <- data.frame(DF)
df <- head(df,7)
df
cor(df$Bed.Rms,df$Lot.Sqft,use='complete.obs',method='pearson')
cor(df,use='complete.obs',method='pearson')
cor(df$Bed.Rms~df$Lot.Sqft,use='complete.obs',method='pearson')
cor.test(df$Bed.Rms~df$Lot.Sqft,method='pearson')
df$Bed.Rms
df
DF
View(DF)
read.csv("milwaukee")
read.csv("milwaukee.csv")
read.csv("Book1.csv")
read.csv("milwaukee.csv")
df <- read.csv("milwaukee.csv")
df <- data.frame(df)
df <- head(df,7)
cor.test(df$Bed.Rms,df$Lot.Sqft,method='pearson')
df <- data.frame(read.csv("milwaukee.csv"))
df <- head(df,7)
cor.test(df$Bed.Rms,df$Lot.Sqft,method='pearson')
df$Bed.Rms
df$Lot.Sqft
View(df)
summary(df)
str(df)
transform(df, df$Lot.Sqft = as.numeric(df$Lot.Sqft))
df$Lot.Sqft <- as.numeric(df$lot.sqrt)
df$Lot.Sqft <- as.numeric(as.character(df$lot.sqrt))
str(df$Lot.Sqft)
df <- data.frame(read.csv("milwaukee.csv"),stringsAsFactors = FALSE)
str(df)
df <- data.frame(read.csv("milwaukee.csv"),stringsAsFactors = FALSE)
str(df)
df$Lot.Sqft <- transform(df, Lot.sqft=as.numeric(as.character(df)))
df <- read.csv("milwaukee.csv"),stringsAsFactors = FALSE
df <- read.csv("milwaukee.csv",stringsAsFactors = FALSE)
df <- head(df,7)
str(df)
df$Lot.Sqft <- as.numeric(df$Lot.Sqft)
df$Lot.Sqft
df <- read.csv("milwaukee.csv",stringsAsFactors = FALSE)
df <- head(df,7)
df
df <- as.data.frame(supply(df,as.numeric))
df <- as.data.frame(lapply(df,as.numeric))
View(df)
df <- read.csv("milwaukee.csv",stringsAsFactors = FALSE)
df <- head(df,7)
df$lot <- as.numeric(df$Lot.Sqft)
df$Lot
str(df$lot)
df$lot
df$Lot
df$lot.sqft <- c(4,680,7,100,5,040,5,000,5,125,5,880,7,560)
DF$lot.sqft <- c(4,680,7,100,5,040,5,000,5,125,5,880,7,560)
df <- read.csv("milwaukee.csv",stringsAsFactors = FALSE)
DF <- head(df,7)
str(DF)
as.numeric(as.character(df$Lot.Sqft))
df <- read.csv("milwaukee.csv",stringsAsFactors = FALSE)
DF <- head(df,7)
str(DF)
cor.test(DF$Bed.Rms,DF$Lot.Sqft,method="pearson")
result <- cor.test(DF$Bed.Rms,DF$Lot.Sqft,method="pearson")
if(result<=0.05){
print('we reject the null hypothesis')
} else{
print('we cannot reject the null hypothesis')
}
result <- cor.test(DF$Bed.Rms,DF$Lot.Sqft,method="pearson")
if(result$p.value<=0.05){
print('we reject the null hypothesis')
} else{
print('we cannot reject the null hypothesis')
}
df <- cars
plot(df$speed,df$dist)
count(row)
nrow(df)
cor(df,use='complete.obs',method="pearson")
cor.test(df$speed,df$dist,method="pearson")
result <- cor.test(df$speed,df$dist,method="pearson")
### the result from cor.test is the same as the result from part c.
if (result$p.value<=0.05){
print('we reject the null hypothesis')
} else{
print("we cannot reject the null hypothesis")
}
cor(df,use = 'complete.obs',method='spearman')
cor.test(df$speed,df$dist,method = "spearman")
result <- cor.test(df$speed,df$dist,method="pearson")
### the result from cor.test is the same as the result from part c.
if (result$p.value<=0.05){
print('we reject the null hypothesis')
} else{
print("we cannot reject the null hypothesis")
}
result <- cor.test(df$speed,df$dist,method = "spearman")
cor(df,method='spearman')
result <- cor.test(df$speed,df$dist,method = "spearman")
result <- cor.test(df$speed,df$dist,method = "spearman")
# same result as part d
if (result$p.value<= 0.05){
print("we reject the null hypothesis")
}else{
print("we cannot reject the null hypothesis")
}
r_crit1 <- 2/sqrt(36)
r_crti2 <- 2/sqrt(80)
read.csv("UK_Housing.csv")
df <- read.csv("UK_Housing.csv")
cor.test(df$floorarea,df$bedrooms,method='pearson')
result <- cor.test(df$floorarea,df$bedrooms,method='pearson')
if (result<=0.05){
print('we reject the null hypothesis')
} else{
print('we cannot reject the null hypothesis')
}
if (result$p.value<=0.05){
print('we reject the null hypothesis')
} else{
print('we cannot reject the null hypothesis')
}
df <- cars
m <- lm(df$speed~df$dist,data=df)
n <- nrow(df)
plot(df$speed,df$dist)
summary(m)
abline(m,col='red',lwd=2)
m <- lm(df$dist~df$speed,data=df)
abline(m,col='red',lwd=2)
segments(cars$speed,fitted(m),cars$speed,cars$dist,col='skyblue',lty='dashed')
n <- nrow(df)
df$x <- sample(10:100,size=n)
df$y <- prdict(m,newdata=data.frame(speed = df$x))
df$y <- predict(m,newdata=data.frame(speed = df$x))
plot(df$x,df$y)
abline(m,col='red')
m <- lm(df$dist~df$speed,data=df)
plot(df$speed,df$dist)
n <- nrow(df)
df$x <- sample(10:100,size=n)
df$y <- predict(m,newdata=data.frame(speed = df$x))
plot(df$x,df$y)
x <- df$speed
y <- df$dist
df$x <- sample(10:100,size=n)
df$y <- predict(m,newdata=data.frame(speed = df$x))
plot(df$x,df$y)
install.packages("leaflet")
m <- leaflet()
library(leaflet)
m <- leaflet()
m <- addTiles(m)
m <- addMarkers(m,lng=-75.968342, lat=42.089026,popup="Binghamton University")
m
leaflet() %>%
addTiles() %>%
addMarkers(Ing=-75.968342,lat=42.089026,popup="Binghamton University")
leaflet() %>%
addTiles() %>%
addMarkers(m,Ing=-75.968342,lat=42.089026,popup="Binghamton University")
leaflet() %>%
addTiles() %>%
addMarkers(m,lng=-75.968342,lat=42.089026,popup="Binghamton University")
leaflet() %>%
addTiles() %>%
addMarkers(lng=-75.968342,lat=42.089026,popup="Binghamton University")
leaflet() %>%
addTiles() %>%
addProviderTiles(provider,"Esri.World StreetMap",group = "Wrold Streetmap")
library(knitr)
df <- quakes
leaflet(data=df) %>%
addTiles() %>%
addMarkers(~long,~lat,popup = ~as.character(mag),clusterOptions = markerClusterOptions())
y <- c(120,68,35,60,100,91,44,71,89,113)
x <- c(65,35,30,44,80,77,32,39,44,77)
x.mean <- mean(x)
y.mean <- mean(y)
b <- sum((x-x.mean)*(y-y.mean))/sum((x-x.mean)^2)
sum((x-x.mean)*(y-y.mean))
sum((x-x.mean)^2)
y.mean - b*x.mean
m <- lm(y~x)
anova(m)
5039.2+2189.7
sum((y - y.mean)^2)
5039.2/7228.9
qf(0.95,df1=1,df2=8)
setwd("C:/Users/Li/Desktop/Introduction to statistical methods for geography/Class Notes/11.1")
df <- read.csv("http://spatial.binghamton.edu/geog533/data/Milwaukee_Sales.csv")
